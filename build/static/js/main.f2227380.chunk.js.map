{"version":3,"sources":["services/logservice.js","services/httpmodule.js","services/authService.js","components/common/tableheader.jsx","components/common/tablebody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviestable.jsx","components/common/listgroup.jsx","services/movieService.js","services/genreSrevice.js","components/common/paginantion.jsx","utils/paginate.js","components/searchBox.jsx","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/notFound.jsx","components/rentals.jsx","components/navBar.jsx","components/loginform.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/protectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logservice","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","api","tokenkey","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrenUser","jwtDecode","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","onClick","label","key","React","Component","TableBody","rendercell","item","content","_","creteKey","_id","Table","Like","classes","liked","style","cursor","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","Listgroup","items","textProperty","valueProperty","onitemSelect","selecteditem","defaultProps","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","Pagination","itemscount","pagesize","onPagechange","currentpage","pagescount","Math","ceil","pages","range","page","paginate","pagenumber","startindex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedgenre","handleDelete","orignalMovies","filter","m","setState","handlelike","index","indexOf","handlepagechange","handlegenreselect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Input","rest","htmlFor","id","Select","options","option","Form","errors","schema","username","Joi","string","required","validate","result","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMsg","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","number","min","max","history","match","params","mapToViewModel","replace","fillGenres","fillMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","NotFound","Rentals","NavBar","NavLink","Fragment","LoginForm","location","window","from","pathname","Redirect","Logout","apiUrl","register","RegisterForm","userService","ProtectedRoute","component","render","Route","App","Switch","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.f2227380.chunk.js","sourcesContent":["\r\n\r\n\r\nfunction init(){\r\n    // Sentry.init({\r\n    //     dsn: \"https://65f0c289d9d14544a1e2849d9c1c8538@o1094428.ingest.sentry.io/6113471\",\r\n    //     integrations: [new Integrations.BrowserTracing()],\r\n      \r\n    //     // Set tracesSampleRate to 1.0 to capture 100%\r\n    //     // of transactions for performance monitoring.\r\n    //     // We recommend adjusting this value in production\r\n    //     tracesSampleRate: 1.0,\r\n    //   });\r\n}\r\nfunction log(error){\r\n    // Sentry.captureException(error);\r\n    console.error(error);\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log\r\n};","import axios from 'axios';\r\nimport logservice from \"./logservice\";\r\n\r\nimport {toast} from \"react-toastify\";\r\n\r\n//sending post ...include header for http requeest\r\n\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n//For unexpected error\r\naxios.interceptors.response.use(null,error=>{\r\n    const experror= error.response && \r\n    error.response.status >=400 && \r\n    error.response.status<500;\r\n  \r\n    if(!experror){\r\n      logservice.log(error);  \r\n    //   console.log('Error logged ',error);\r\n      toast.error(\"An unexpected error occurs\")\r\n    }\r\n  \r\n    return Promise.reject(error);\r\n    //Ctrl pass to catch\r\n  });\r\n\r\n  function setJwt(jwt){\r\n    axios.defaults.headers.common['x-auth-token']=jwt;\r\n  }\r\n  \r\n  export default{\r\n      get:axios.get,\r\n      post: axios.post,\r\n      put:axios.put,\r\n      delete: axios.delete,\r\n      setJwt\r\n\r\n  };","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpmodule\";\r\n\r\n\r\nconst api=\"/auth\";\r\nconst tokenkey=\"token\";\r\n//Reverse order due to bi directional dependicies\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email,password) {\r\n    const {data:jwt}  =  await http.post(api,{email,password});\r\n   localStorage.setItem(tokenkey,jwt);\r\n\r\n}\r\n //Reg form\r\n export async function loginWithJwt(jwt){\r\n    localStorage.setItem(tokenkey,jwt);\r\n }\r\n\r\n\r\nexport function logout(){\r\n    localStorage.removeItem(tokenkey);\r\n}\r\n\r\nexport function getCurrenUser(){\r\n    try {\r\n        const jwt=localStorage.getItem(tokenkey);\r\n        return jwtDecode(jwt);\r\n        \r\n     \r\n      } catch (error) {\r\n          return null;\r\n        //No valiad web token\r\n      }\r\n}\r\n\r\n//Api end pont with headers--->call from http module\r\nexport function getJwt(){\r\n    return localStorage.getItem(tokenkey);\r\n}\r\n\r\n\r\nexport default{\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrenUser,\r\n    getJwt\r\n\r\n}","import React, { Component } from 'react';\r\n//columns\r\n//sortcolumn\r\n//on sort fnkn\r\n\r\n\r\nclass TableHeader extends React.Component {\r\n    raiseSort = path =>{\r\n        //First setstate \r\n          //then go to render and do main work\r\n          //create new obj using spread operator\r\n          const sortColumn={...this.props.sortColumn};\r\n          //Path same\r\n          if(sortColumn.path=== path)\r\n          //Then desc\r\n          sortColumn.order=( sortColumn.order ==='asc')?'desc':'asc';\r\n          else{\r\n              //else acs by default\r\n              sortColumn.path=path;\r\n              sortColumn.order='asc';\r\n          }\r\n        this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column =>{\r\n      const {sortColumn}=this.props\r\n      //Not sorted \r\nif(column.path !==sortColumn.path) return null;\r\nif(sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\nreturn <i className=\"fa fa-sort-desc\"></i>\r\n  };\r\n\r\n    render() { \r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {\r\n                        this.props.columns.map(column=>\r\n                        <th \r\n                        className=\"clickable \"\r\n                        key={column.path || column.key} \r\n                        onClick={ ()=>this.raiseSort(column.path)}>\r\n                            {column.label} {this.renderSortIcon(column)}\r\n                            \r\n                            </th>)\r\n                    }\r\n                    \r\n                </tr>\r\n            </thead>\r\n            );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends React.Component {\r\n    rendercell=(item,column)=>{\r\n        if(column.content) return column.content(item);\r\n  return _.get(item,column.path);\r\n\r\n    };\r\n    creteKey =(item,column) =>{\r\n    return item._id +(column.path || column.key);\r\n    }\r\n    render() { \r\n        const{data,columns}=this.props;\r\n        return (\r\n<tbody>\r\n   {\r\n       data.map(item =><tr key={item._id} >\r\n           {/* Acessing property dynamically using [] \r\n           2- Loadash get method\r\n           */}\r\n      { columns.map(column => \r\n      <td key={this.creteKey(item,column)}>\r\n          {this.rendercell(item,column)}\r\n          \r\n          </td> )}     \r\n       \r\n    </tr>) \r\n\r\n   } \r\n    \r\n</tbody>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableheader';\r\nimport TableBody from './tablebody';\r\nconst Table = ({columns,sortColumn,onSort,data}) => {\r\n//Picking properties from argument which is props oject\r\n\r\n    return (  \r\n\r\n        <table className=\"table\">\r\n        <TableHeader \r\n        columns={columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        \r\n        />\r\n        <TableBody \r\n        columns={columns}\r\n        data={data}\r\n        \r\n        \r\n        />\r\n         {/* Deletion */}\r\n         \r\n\r\n      </table>\r\n\r\n    );\r\n}\r\n \r\nexport default Table;","import React, { Component } from 'react';\r\n//input lIkd :boolean\r\n//out -- Onclick\r\n// state less function\r\nconst Like = props => {\r\n    let classes=\"fa fa-heart\";\r\n    if(!props.liked) classes+=\"-o\";\r\n    return ( \r\n    <i onClick={props.onClick} style={{cursor:'pointer'}} className={classes} aria-hidden=\"true\" ></i>\r\n    );\r\n}\r\n \r\n\r\n\r\n// class Like extends React.Component {\r\n  \r\n\r\n//     render() { \r\n//         let classes=\"fa fa-heart\";\r\n//         if(!this.props.liked) classes+=\"-o\";\r\n//         return ( \r\n//         <i onClick={this.props.onClick} style={{cursor:'pointer'}} className={classes} aria-hidden=\"true\" ></i>\r\n//         );\r\n//     }\r\n// }\r\n \r\nexport default Like;","import React ,{Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../services/authService';\r\nimport Table from './common/table'; \r\nimport Like  from './common/like';\r\n\r\n\r\nclass MoviesTable extends React.Component {\r\ncolumns=[\r\n    {path:'title',\r\n    label:'Title' ,\r\n    content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>},\r\n    {path:'genre.name',label:'Genre'},\r\n    {path:'numberInStock',label:'Stock'},\r\n    {path:'dailyRentalRate',label:'Rate'},\r\n    {key:\"like\" ,content: movie=> <Like liked={movie.liked} onClick={() => this.props.onLike(movie)}/>},\r\n    \r\n \r\n];\r\ndeleteColumn= {\r\n        key:\"delete\" ,\r\n        content:movie =>\r\n        <button onClick={() =>this.props.onDelete (movie)} \r\n        className=\"btn btn-danger btn-sm\">\r\n            Delete\r\n            </button>\r\n            }\r\n\r\n\r\nconstructor(){\r\n    super();\r\n    const user=auth.getCurrenUser();\r\n    if(user && user.isAdmin){\r\n       this.columns.push( this.deleteColumn);\r\n    }\r\n\r\n}\r\n\r\n\r\n    render() { \r\n       \r\n        const {movies,onSort,sortColumn }=this.props;\r\n        return ( \r\n    <Table  \r\n    columns={this.columns} \r\n    data={movies}\r\n    sortColumn={sortColumn}\r\n    onSort={onSort}\r\n    />\r\n   \r\n         );\r\n    }\r\n}\r\n \r\n\r\n\r\n\r\n \r\nexport default MoviesTable;","import React from 'react';\r\n\r\nconst Listgroup = (props) => {\r\n    const {items,textProperty,valueProperty ,onitemSelect,selecteditem}=props;\r\n    //Mow map each item in array\r\n    //Give key\r\n    //Render Text\r\n    return <ul className=\"list-group\">\r\n        {items.map(item =><li \r\n        onClick={() => onitemSelect(item)}\r\n        key={item[valueProperty]} \r\n        className={item === selecteditem?\"list-group-item active\":\"list-group-item\"}>\r\n        {item[textProperty]}</li>)}\r\n        \r\n    </ul>;\r\n};\r\n\r\nListgroup.defaultProps={\r\n    textProperty:\"name\",\r\n    valueProperty:\"_id\"\r\n}\r\n \r\nexport default Listgroup;","import http from \"./httpmodule\";\r\n\r\n\r\nconst api=\"/movies\";\r\nexport function getMovies(){\r\n    return http.get(api);\r\n\r\n}\r\nexport function getMovie(movieId){\r\n    return http.get(api + \"/\"+ movieId);\r\n\r\n}\r\nexport function saveMovie(movie){\r\n    //Same id encounters--Update\r\n    if(movie._id){\r\n        const body={...movie};\r\n        delete body._id;\r\n      return http.put(api+ \"/\"+movie._id,body);\r\n    }\r\n    return http.post(api,movie);\r\n\r\n\r\n}\r\n\r\nexport function deleteMovie(movieId){\r\n    return http.delete(api+ \"/\"+ movieId);\r\n\r\n}\r\n\r\n","import http from './httpmodule'\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n  }\r\n  ","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst Pagination = props => {\r\n    const { itemscount ,pagesize ,onPagechange,currentpage} = props;\r\n    console.log(currentpage);\r\n    const pagescount=Math.ceil (itemscount /pagesize);\r\n    //Handle one page\r\n    if(pagescount === 1) return null;\r\n//Lodash and range array\r\n   const pages= _.range(1,pagescount+1);\r\n//MAp\r\n    return(\r\n     <nav>\r\n        <ul className=\"pagination\">\r\n            {pages.map(page =>\r\n            <li key={page} className={page === currentpage ? 'page-item active' : 'page-item' }>\r\n                <a className=\"page-link\" \r\n                onClick={()=>onPagechange(page)}>{page}</a>\r\n                </li>\r\n                \r\n                )}\r\n            \r\n        </ul>\r\n    </nav>\r\n    );\r\n};\r\n \r\nexport default Pagination;","import _ from 'lodash';\r\n\r\nexport function paginate(items,pagenumber,pagesize){\r\n   const startindex=(pagenumber-1)*pagesize;\r\n   //Loadash will take all items from current page \r\n   //slice array from startindex\r\n  //_.slice(items,startindex)\r\n  //_.take\r\n  //lodasah wrapper--->to array using value\r\n\r\n return  _(items)\r\n .slice(startindex)\r\n .take(pagesize)\r\n .value();\r\n\r\n}\r\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from 'react';\r\nimport MoviesTable from './moviestable';\r\nimport Listgroup from './common/listgroup';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteMovie, getMovies} from '../services/movieService';\r\nimport { genres, getGenres } from '../services/genreSrevice';\r\nimport Pagination from './common/paginantion';\r\nimport {paginate} from '../utils/paginate';\r\nimport _ from 'lodash';\r\nimport SearchBox from './searchBox';\r\nclass Movies extends React.Component {\r\n    state={\r\n        movies:[],\r\n        genres:[],\r\n        currentpage:1,\r\n        searchQuery:\"\",\r\n        selectedgenre:null,\r\n        pagesize:4,\r\n    sortColumn: {path:'title', order:'asc'}\r\n    };\r\n    async componentDidMount(){\r\n        //all genres spreading data from func\r\n        //paass empty propo b/cc undefine\r\n        const{data}= await getGenres();\r\n        const genres=[{ _id:\"\",name:'All Genres'},...data]\r\n    //    this.setState({movies:getMovies(),genres:getGenres()}) ;\r\n     const {data : movies}=await getMovies()\r\n\r\n    this.setState({movies,genres}) ;\r\n\r\n    };\r\n\r\n    // Handling Delete\r\n    handleDelete = async movie =>{\r\n        const orignalMovies=this.state.movies;\r\n        //contain all movie except clicked movies\r\n        const movies =orignalMovies.filter(m => m._id !== movie._id);\r\n        //in modern js if key==value so\r\n        //Also this.setState({movies:movies})\r\n        this.setState({movies});\r\n\r\n        try {\r\n            await deleteMovie(movie._id);\r\n        }\r\n        catch(ex){\r\n            if(ex.response && ex.response.status === 404)\r\n            toast.error(\"Movie already been deleted\");\r\n          \r\n            \r\n            this.setState({movies : orignalMovies});\r\n        }\r\n    };\r\n    handlelike= (movie) => {\r\n        console.log(movie);\r\n        //Clone\r\n        const movies=[...this.state.movies];\r\n        const index= movies.indexOf(movie);\r\n        //copying all properties\r\n        movies[index]={...movies[index]};\r\n        //it returns T if F else  true \r\n        movies[index].liked=!movies[index].liked;\r\n        this.setState({movies});\r\n    };\r\n    handlepagechange = page =>{\r\n        //Rendering page\r\n        this.setState({currentpage : page});\r\n    }\r\n    handlegenreselect = genre =>{\r\n        //when ever we select genre we should reset the pge to one\r\n        this.setState({selectedgenre:genre,searchQuery :\"\",currentpage:1 });\r\n    }\r\n    handleSearch =query =>{\r\n        this.setState({searchQuery :query,selectedgenre:null,currentpage:1})\r\n    };\r\n    handleSort = sortColumn =>{\r\n      \r\n       this.setState({sortColumn});\r\n    };\r\n\r\n\r\n\r\n    getPagedData =()=>{\r\n        //if selected genre\r\n        //filter acc to db.genre.id=== screenclick.genre.id\r\n        //else display all movies\r\n//For fixing all genres selectedgenre._id if both true ..else get all movies\r\nconst{pagesize,\r\n    currentpage,\r\n    sortColumn,\r\n    selectedgenre,\r\n    searchQuery,\r\n    movies : allMovies\r\n}=this.state;\r\nlet filtered=allMovies;\r\nif (searchQuery)\r\nfiltered = allMovies.filter(m =>\r\n  m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n);\r\nelse if (selectedgenre && selectedgenre._id)\r\nfiltered = allMovies.filter(m => m.genre._id === selectedgenre._id);\r\n// const filtered =selectedgenre && selectedgenre._id\r\n// ? allmovies.filter() \r\n// : allmovies;\r\n\r\n//Sorting\r\n//1st arg- input\r\n//2nd arg- array of properties\r\n\r\nconst sorted=_.orderBy(filtered ,[sortColumn.path],[sortColumn.order]);\r\n\r\n//const movies=paginate(allmovies,currentpage,pagesize);\r\n//filtereation\r\nconst movies=paginate(sorted,currentpage,pagesize); \r\nreturn {totalCount : filtered.length,data:movies};\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    render() { \r\n        const{ length :count}=this.state.movies;\r\n\r\n        const{pagesize,currentpage,sortColumn,searchQuery}=this.state;\r\n        const{user}=this.props;\r\n\r\n        // if(count ===0)\r\n        // return <p>There are no movies in Database</p>\r\n const {totalCount,data :movies}= this.getPagedData();\r\n        return (\r\n            //Making left and right columns\r\n<div className=\"row\"> \r\n<div className=\"col-3\">\r\n\r\n    <Listgroup \r\n    items={this.state.genres}\r\n    // textProperty=\"name\"\r\n    // valueProperty=\"_id\"\r\n    //FOR ACTIVE CLASS SELECTED GENRE\r\n    selecteditem={this.state.selectedgenre}\r\n     onitemSelect={this.handlegenreselect}\r\n     />\r\n</div>\r\n<div className=\"col\"> \r\n{user && (<Link\r\nto=\"/movies/new\"\r\nclassName=\"btn btn-primary\"\r\nstyle={{marginBottom:20}}\r\n>\r\n\r\nNew Movie\r\n</Link>)\r\n}\r\n\r\n\r\n<p>Showing {totalCount} movies in database.</p>\r\n{/* //table.table>thead>tr>th*4 --gen coding */}\r\n\r\n<SearchBox value={searchQuery} onChange={this.handleSearch}/>\r\n<MoviesTable \r\nmovies={ movies} \r\nsortColumn={sortColumn}\r\nonLike={this.handlelike} \r\nonDelete={this.handleDelete}\r\nonSort={this.handleSort}\r\n/>\r\n\r\n{/* //Pagination \r\n\r\nthis.state.movies.length\r\n*/}\r\n{/* itemscount={count} */}\r\n\r\n<Pagination \r\nitemscount={totalCount}\r\n pagesize={pagesize} \r\n currentpage={currentpage}\r\n onPagechange={this.handlepagechange}\r\n \r\n\r\n />\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Movies ;\r\n\r\n//Paaing props from movies to pagination","import React from 'react';\r\n// const Input = ({name,label,value,error,onChange,type})\r\nconst Input = ({name,label,error, ...rest}) => {\r\n    return ( \r\n        //Using rest and spread for rest props\r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input \r\n        // value={value}\r\n        // onChange={onChange}\r\n        // type={type} \r\n        {...rest}\r\n        name={name} \r\n        id={name} \r\n        \r\n        className=\"form-control\" />\r\n\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        <br/>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Input;","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {/* //mapping all options */}\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\nclass Form extends React.Component {\r\n    state={\r\n        data:{},\r\n        errors:{}\r\n    };\r\n    schema={\r\n        username:Joi.string().required().label(\"Username\"),\r\n        password:Joi.string().required().label(\"Password\")\r\n       \r\n       };\r\n       \r\n       \r\n       //Using array for errors easy to find using find method\r\n       //thahts why we use object\r\n       validate=()=>{\r\n           const options={abortEarly:false}\r\n       const result=Joi.validate(this.state.data,this.schema,options);\r\n       if(!result.error) return null;\r\n       const errors={};\r\n       for(let item of result.error.details)\r\n           errors[item.path[0]]=item.message;\r\n           return errors;\r\n        };\r\n\r\n        validateProperty =({name,value}) =>{\r\n            const obj={[name]:value};\r\n            const schema={[name]:this.schema[name]};\r\n          const{error}= Joi.validate(obj,schema);\r\n          if(!error) return null;\r\n          return error.details[0].message;\r\n        };\r\n\r\n        //handling form submisson bc it reloads whole page on refresh\r\n    handleSubmit=e =>{\r\n        e.preventDefault();\r\n       //render error messages\r\n         const errors=this.validate();\r\n    \r\n        this.setState({errors : errors || {}  });\r\n    \r\n        if(errors) return;\r\n        this.doSubmit();\r\n    };\r\n\r\n    handleChange=({currentTarget:input})=>{\r\n        const errors={...this.state.errors};\r\n         //On change\r\n         const errorMsg=this.validateProperty(input);\r\n         if(errorMsg) errors[input.name]=errorMsg;\r\n         else delete errors[input.name];\r\n          \r\n         //clone\r\n         const data={...this.state.data};\r\n         data[input.name]=input.value;\r\n         this.setState({data,errors});\r\n     };\r\n     renderButton(label){\r\n         return(\r\n     <button disabled={this.validate()} className=\"btn btn-primary\">\r\n         {label}\r\n     </button>\r\n         );\r\n     };\r\n     renderSelect(name,label,options){\r\n        const{data,errors}=this.state;\r\n        return (\r\n            <Select\r\n           \r\n            name={name}\r\n            value={data[name]}\r\n           label={label}\r\n           options={options}\r\n           onChange={this.handleChange}\r\n           error={errors[name]}\r\n            />\r\n        \r\n            \r\n        ); \r\n   \r\n }\r\n\r\n     renderInput(name,label,type='text'){\r\n        const{data,errors}=this.state;\r\n        return (\r\n            <Input \r\n            type={type}\r\n            name={name}\r\n            value={data[name]}\r\n           label={label}\r\n           onChange={this.handleChange}\r\n           error={errors[name]}\r\n            />\r\n        \r\n            \r\n        ); \r\n     }\r\n    \r\n}\r\n \r\nexport default Form;","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreSrevice\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\nasync fillGenres(){\n  const {data:genres} = await  getGenres();\n    this.setState({ genres });\n}\n\nasync fillMovie(){\n    try{\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const {data:movie }= await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    }\n  catch(ex){\n    if(ex.response && ex.response.status===404)\n   this.props.history.replace(\"/not-found\");\n  }\n\n}\n async componentDidMount() {\n  \n  await this.fillGenres();\n  await this.fillMovie();\n       \n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit =  async () => {\n   await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from 'react';\r\nimport {Link,NavLink} from \"react-router-dom\";\r\n//Changing nav bar acco to user \r\nconst NavBar = ({user}) => {\r\n    return (  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  < Link className=\"navbar-brand\" to=\"/\">v-Movies</Link>\r\n    <button className=\"navbar-toggler \" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\" navbar-collapse \" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item active\">\r\n         <NavLink className=\"nav-link\" to=\"/movies\">Movie <span className=\"sr-only\">(current)</span></NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n         <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n         <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n         \r\n        </li>\r\n    { !user &&(\r\n       <React.Fragment>\r\n  <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n         \r\n        </li>\r\n        <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\r\n         \r\n        </li>\r\n    </React.Fragment>)\r\n}\r\n{/* //If have user then render user name */}\r\n{ user &&(\r\n       <React.Fragment>\r\n  <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/profile\">\r\n          {user.name}\r\n          </NavLink>\r\n         \r\n        </li>\r\n        <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/logout\">\r\n          Logout\r\n          </NavLink>\r\n         \r\n        </li>\r\n    </React.Fragment>)\r\n}\r\n      </ul>\r\n    </div>\r\n  </nav>);\r\n}\r\n \r\nexport default NavBar;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\nimport Form from './common/form';\r\nimport Input from './common/input';\r\nimport auth from \"../services/authService\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginForm extends Form {\r\n// username=React.createRef();\r\n// password=React.createRef();\r\n// componentDidMount(){\r\n//     this.username.current.focus();\r\n// }\r\nstate={\r\n    data:{username:\"\",password:\"\"},\r\n    errors:{}\r\n};\r\n\r\n    doSubmit= async ()=>{\r\n\r\n        try {\r\n            const {data}=this.state;\r\n            //Store jwt on login\r\n        await auth.login(data.username,data.password);\r\n        \r\n        //redirect using history\r\n        //come from protected route\r\n        //if state is defined otherwise home page\r\n        const{state}=this.props.location;\r\n        window.location=state ? state.from.pathname : \"/\" ;\r\n            \r\n        } catch (ex) {\r\n            if(ex.response && ex.response.status === 400){\r\n              const errors= {...this.state.errors};\r\n              errors.username=ex.response.data;\r\n              this.setState({errors});\r\n            }\r\n        }\r\n     \r\n        //Call server\r\n        console.log(\"Submitted\");\r\n    }\r\n\r\n\r\n\r\n//also e.currentTarget \r\n\r\n\r\n    render() { \r\n        \r\n        if(auth.getCurrenUser()) return <Redirect to=\"/\"/>;\r\n        return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <form  onSubmit={this.handleSubmit}>\r\n            {this.renderInput(\"username\",\"Username\")}\r\n            {this.renderInput(\"password\",\"Password\",\"password\")}\r\n             {this.renderButton(\"Login\")}\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends React.Component {\r\n    \r\n    componentDidMount(){\r\n       auth.logout();\r\n        window.location=\"/\";\r\n    }\r\n    \r\n    \r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import http from \"./httpmodule\";\r\nimport {apiUrl} from \"../config.json\";\r\n\r\nconst api=apiUrl+\"/users\";\r\nexport function register(user){\r\n    return http.post(api,{\r\n        email:user.username,\r\n        password:user.password,\r\n        name:user.name\r\n    });\r\n\r\n}","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit = async  () => {\n    // Call the server\n    try{\n     const response= await  userService.register(this.state.data);\n    auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n    window.location=\"/\";\n    }\n    //user already register\n   catch(ex){\n     if(ex.response && ex.response.status === 400)\n     {\n      const errors ={...this.state.errors};\n      errors.username=ex.response.data;\n      this.setState({errors});\n     }\n    \n\n   }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from 'react';\r\nimport { Route ,Redirect} from \"react-router-dom\";\r\nimport auth from '../services/authService';\r\n\r\nconst ProtectedRoute = ({path,component:Component,render,...rest} ) => {\r\n    return (  \r\n    <Route \r\n    \r\n    {...rest}\r\n    render={props =>{\r\n        //redirect to movie edit page not login by using props\r\n     if(!auth.getCurrenUser()) return <Redirect to={{\r\n         pathname:\"/login\",\r\n         state:{from :props.location}\r\n     }}/>\r\n     return Component ? <Component {...props} />: render(props);\r\n   \r\n      }}></Route>  );\r\n}\r\n \r\nexport default ProtectedRoute;","import React,{Component} from 'react';\nimport { Route ,Redirect,Switch} from \"react-router-dom\";\nimport {ToastContainer} from 'react-toastify';\nimport Movies from './components/movies';\nimport MovieForm from \"./components/movieForm\"\nimport Customers from \"./components/customers\";\nimport NotFound from \"./components/notFound\";\nimport Rentals from \"./components/rentals\";\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginform';\nimport Logout from './components/logout';\nimport RegisterForm from './components/registerForm';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css'\nimport './App.css';\nimport ProtectedRoute from './components/protectedRoute';\n\n\n\nclass App extends Component{\n  state={};\n  componentDidMount() {\n  const user= auth.getCurrenUser();\n    this.setState({user}); \n\n  }\n\nrender(){\n  const{user}=this.state;\n  return (\n    <React.Fragment>\n      <ToastContainer/>\n  <NavBar user={this.state.user}/>\n  <main className=\"container\">\n    {/* Protecting routes using render movieform */}\n <Switch>\n <Route path=\"/register\" component={RegisterForm}></Route>\n <Route path=\"/login\" component={LoginForm}></Route>\n <Route path=\"/logout\" component={Logout}></Route>\n {/* //Protect route */}\n <ProtectedRoute path=\"/movies/:id\" component={MovieForm}/>\n\n  <Route path=\"/movies\" render={props => <Movies {...props} user={this.state.user} /> }></Route>\n  <Route path=\"/customers\" component={Customers}></Route>\n  <Route path=\"/rentals\" component={Rentals}></Route>\n  <Route path=\"/not-found\" component={NotFound}></Route>\n  <Redirect from=\"/\" exact to=\"/movies\"/>\n  <Redirect exact to=\"/not-found\"/>\n  </Switch>\n\n   </main>\n   </React.Fragment>\n  );\n}\n\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\n\n\nReactDOM.render(\n  \n <BrowserRouter><App/></BrowserRouter>,\n  \n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}